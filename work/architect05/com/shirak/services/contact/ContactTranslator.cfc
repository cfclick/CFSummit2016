component  output="false"
{
	import conference.services.BaseEntity;
	import conference.services.contact.ContactAddress;
	import conference.repository.autogenerated.AddressType;
	
	public ContactTranslator function init() {
		return this;
	}
	
	
	public ContactAddress function toContactAddress( required struct procResultSet ) {
		var add = arguments.procResultSet;
		var ContactAddress = new ContactAddress();	
		ContactAddress.AddressID = add.AddressID;
		ContactAddress.AddressTypeID = add.AddressTypeID;
		ContactAddress.Address1 = add.Address1;
		ContactAddress.Address2 = add.Address2;
		ContactAddress.City = add.City;
		ContactAddress.State = add.State;
		ContactAddress.ZipCode = add.ZipCode;
		ContactAddress.IsActive = add.IsActive;
		ContactAddress.AddressTypeName = add.AddressTypeName;
		ContactAddress.baseEntity = new BaseEntity();
		ContactAddress.baseEntity.createdBy = add.createdBy;
		ContactAddress.baseEntity.createdDateTime = add.createdDateTime;
		ContactAddress.baseEntity.updatedBy = add.updatedBy;
		ContactAddress.baseEntity.updatedDateTime = add.updatedDateTime;
		return ContactAddress;
	}
	
	
	public ContactAddress[] function toArrayOfContactAddress( required struct procResultSet ) {
		var address_qry = arguments.procResultSet.getResult();
		var ContactAddresses = [];
		
		for( var address in address_qry ) {
			var contactAddress = toContactAddress( address );
			ContactAddresses.append( contactAddress );
		}

		return ContactAddresses;
	}
}