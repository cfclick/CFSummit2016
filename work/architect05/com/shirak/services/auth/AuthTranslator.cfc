component  output="false"
{
	//DI to inject another translator
	//property name="customerTranslator" inject="TRNS:CustomerTranslator";
	
	import conference.repository.autogenerated.Person;
	import conference.repository.autogenerated.Login;
	import conference.repository.autogenerated.Role;
	
	public AuthTranslator function init() {
		return this;
	}
	
	
	public Identity function toIdentity( required struct procResultSet ) {
		var identityStruct = arguments.procResultSet;
		var identity = new Identity();
		
		for(login in identityStruct.login) {
			identity.login = new Login();
			identity.login.loginID = login.LoginID;
			identity.login.userName = login.userName;
		}

		for(person in identityStruct.person) {

			identity.person = new Person();
			identity.person.personID = person.personID;
			identity.person.name = person.name;
		}
		
		var arrayOfRole = [];
		for( loginRole in identityStruct.LoginRole ) {
			var role = new Role();
			role.roleID = loginRole.roleID;	
			arrayOfRole.append(role);
		}
		identity.arrayOfRole = arrayOfRole;
		return identity;
	}
}