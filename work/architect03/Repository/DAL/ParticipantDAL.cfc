component extends="conference.Injector" output="false"
{
	
	property name="personGTW" inject="REP:PersonGateway";
	property name="addressGTW" inject="REP:AddressGateway";
	property name="conferenceGTW" inject="REP:ConferenceGateway";
	property name="conferenceDAO" inject="REP:ConferenceDAO";
	property name="sessionGTW" inject="REP:SessionGateway";

	import conference.Repository.AutoGenerated.Person;
	import conference.Repository.AutoGenerated.Conference;
	
	import conference.BusinessEntities.Participant;
	
	function init(){
		return initDI( this );
	}
	
	public Participant[] function listParticipants(){
		var participants = [];
		var persons = [];
		persons = this.personGTW.getALL();
		var person = new Person();
		person.personID = 1;
		person.conferenceID = 3;
		person.firstName = "Shirak";
		person.lastName = "Avakian";
		// for( person in persons ){
		 	var participant = new Participant();
		 	var conference = new Conference();
		 	writeDump(person.conferenceID);
		 	conference =  this.conferenceDAO.read( person.conferenceID ); 	
		 	participant.person = person;
		 	participant.conference = conference;
		 	participants.append( participant );
		// }
		/*var sessions = [];
		var addresses = [];
		var person = new Person();
		var address = new Address();
		var conference = new Conference();
		var conf_session = new Session();*/
		
		return participants;
	}
}